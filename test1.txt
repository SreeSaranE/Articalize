const handleAddLink = async () => {
    if (!linkInputValue.trim()) return;
    setIsProcessing(true);

    try {
      const url = linkInputValue.trim();
      Alert.alert('Processing', 'Extracting and summarizing article...');

      const { title, summary, excerpt } = await fetchAndSummarize(url);

      const newArticle: Article = {
        id: Date.now().toString(),
        title: title.split(' ').slice(0, 10).join(' '),
        url,
        dateAdded: new Date().toISOString(),
        summary,
        excerpt,
      };

      const updatedArticles = [...articles, newArticle];
      setArticles(updatedArticles);
      await saveArticles(updatedArticles);

      setLinkInputValue('');
      setShowInput(false);
      Keyboard.dismiss();
    } catch (error) {
      console.log('Error adding article:', error);
      Alert.alert('Error', 'Could not process this article. Saved as basic bookmark.');
      
      // Fallback to basic saving
      const newArticle: Article = {
        id: Date.now().toString(),
        title: linkInputValue.trim(),
        url: linkInputValue.trim(),
        dateAdded: new Date().toISOString(),
        summary: 'Could not generate summary',
      };

      const updatedArticles = [...articles, newArticle];
      setArticles(updatedArticles);
      await saveArticles(updatedArticles);
    } finally {
      setIsProcessing(false);
    }
  };